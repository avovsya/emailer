---
swagger: "2.0"
info:
  description: "Middleware service for sending emails using multiple transactional\
    \ email services"
  version: "1.0.0"
  title: "Emailer API"
host: "emailer-challenge.herokuapp.com"
basePath: "/api/1"
schemes:
- "http"
produces:
- "application/json"
paths:
  /letters:
    post:
      tags:
      - "Letters"
      summary: "Create new letter"
      description: "Creates new letter and returns it's ID. Letter is created but\
        \ not sent\n"
      parameters:
      - in: "body"
        name: "letter"
        description: "Letter object"
        required: true
        schema:
          $ref: "#/definitions/Letter"
      responses:
        200:
          description: "ID of the letter"
          schema:
            $ref: "#/definitions/inline_response_200"
        400:
          description: "Validation Error"
          schema:
            $ref: "#/definitions/inline_response_400"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /letters/{id}:
    put:
      tags:
      - "Letters"
      summary: "Add attachment to an existing letter"
      description: "Accepts Letter ID and file, attaches file to the letter"
      consumes: ["multipart/form-data"]
      parameters:
      - name: "id"
        in: "path"
        description: "Existing Letter ID"
        required: true
        type: "string"
      - name: "file"
        in: "formData"
        description: "File attachment"
        required: true
        type: "file"
      responses:
        200:
          description: "Object with status"
          schema:
            $ref: "#/definitions/inline_response_200_simple"
        404:
          description: "Letter ID not found"
        400:
          description: "File not attached"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /letters/{id}/send:
    post:
      tags:
      - "Letters"
      summary: "Send existing letter"
      description: "Accepts Letter ID and sends it using a first available email service\n"
      parameters:
      - name: "id"
        in: "path"
        description: "Existing Letter ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Object with status and name of the sender service that was\
            \ used to send letter"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        404:
          description: "Letter ID not found"
        503:
          description: "No senders accepted the send request"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Letter:
    type: "object"
    required:
    - "from"
    - "to"
    properties:
      to:
        type: "array"
        description: "Array of the recipient email addresses"
        items:
          type: "string"
          format: "email"
        default: ["receiver@example.com"]
      toname:
        type: "array"
        description: "Array of the recipient names"
        items:
          type: "string"
        default: ["Receiver"]
      from:
        description: "Sender email address"
        type: "string"
        format: "email"
        default: "sender@example.com"
      fromname:
        description: "Sender name"
        type: "string"
        default: "Sender"
      subject:
        description: "Letter subject"
        type: "string"
        default: "Subject"
      text:
        description: "Letter text"
        type: "string"
        default: "Text"
      html:
        description: "Letter html"
        type: "string"
        default: "<a>HTML</a>"
      replyto:
        description: "Reply-To email header"
        type: "string"
        format: "email"
        default: "sender@example.com"
  Error:
    type: "object"
    properties:
      success:
        type: "boolean"
        default: false
      error:
        type: "object"
        properties: {}
      message:
        type: "string"
  inline_response_200_simple:
    properties:
      success:
        type: "boolean"
        description: "Status of the send request"
  inline_response_200:
    properties:
      id:
        type: "string"
        description: "Letter ID"
      success:
        type: "boolean"
        description: "Status of the send request"
  inline_response_400:
    properties:
      success:
        type: "boolean"
        description: "Status"
        default: false
      error:
        type: "object"
        description: "Validation error description"
        properties: {}
  inline_response_200_1:
    properties:
      sender:
        type: "string"
        description: "Name of the sender that was used to send letter"
      success:
        type: "boolean"
        description: "Status of the send request"
